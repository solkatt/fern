[{"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\index.js":"1","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\reportWebVitals.js":"2","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\app\\index.js":"3","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\index.js":"4","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\Links.jsx":"5","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\Logo.jsx":"6","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\NavBar.jsx":"7","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\index.js":"8","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\MoviesInsert.jsx":"9","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\MoviesList.jsx":"10","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\MoviesUpdate.jsx":"11","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\api\\index.js":"12","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\JoinModal.jsx":"13","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\LoginModal.jsx":"14","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\Landing.jsx":"15","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\context\\UserContext.jsx":"16","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\functionalComp.jsx":"17","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\FunctionalComp.jsx":"18","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\utils\\storage.js":"19","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\UserDashboard.jsx":"20","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\UserDash\\Products.jsx":"21","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\UserDash\\AddProduct.jsx":"22","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\UserDash\\EditProduct.jsx":"23","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\UserDash\\Store.jsx":"24","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\utils\\FileUpload.js":"25","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\LoadingAnimation.jsx":"26","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\UserDash\\CreateStore.jsx":"27","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\utils\\FileUploadStore.js":"28","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\Storefront.jsx":"29","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\context\\CartContext.jsx":"30","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\CartNavBar.jsx":"31","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\CustomerDash\\Cart.jsx":"32","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\CustomerDash\\Checkout.jsx":"33","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\UserDash\\Orders.jsx":"34","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\CustomerDash\\OrderCompleted.jsx":"35"},{"size":478,"mtime":1609844367417,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":1884,"mtime":1611881126550,"results":"39","hashOfConfig":"37"},{"size":332,"mtime":1611694042986,"results":"40","hashOfConfig":"37"},{"size":661,"mtime":1610460895457,"results":"41","hashOfConfig":"37"},{"size":482,"mtime":1611868735284,"results":"42","hashOfConfig":"37"},{"size":3221,"mtime":1611878265297,"results":"43","hashOfConfig":"37"},{"size":625,"mtime":1611880635961,"results":"44","hashOfConfig":"37"},{"size":280,"mtime":1609845750307,"results":"45","hashOfConfig":"37"},{"size":851,"mtime":1610107886183,"results":"46","hashOfConfig":"37"},{"size":285,"mtime":1609845763009,"results":"47","hashOfConfig":"37"},{"size":3150,"mtime":1611775031471,"results":"48","hashOfConfig":"37"},{"size":3862,"mtime":1611913076386,"results":"49","hashOfConfig":"37"},{"size":2915,"mtime":1611798329910,"results":"50","hashOfConfig":"37"},{"size":1294,"mtime":1611878567766,"results":"51","hashOfConfig":"37"},{"size":4053,"mtime":1611878302224,"results":"52","hashOfConfig":"37"},{"size":415,"mtime":1610371190675,"results":"53","hashOfConfig":"37"},{"size":271,"mtime":1611323781305,"results":"54","hashOfConfig":"37"},{"size":631,"mtime":1610370739210,"results":"55","hashOfConfig":"37"},{"size":1006,"mtime":1611868768838,"results":"56","hashOfConfig":"37"},{"size":4999,"mtime":1611796966516,"results":"57","hashOfConfig":"37"},{"size":4093,"mtime":1611911940880,"results":"58","hashOfConfig":"37"},{"size":6058,"mtime":1611910365582,"results":"59","hashOfConfig":"37"},{"size":4763,"mtime":1611882399121,"results":"60","hashOfConfig":"37"},{"size":2748,"mtime":1611793234158,"results":"61","hashOfConfig":"37"},{"size":585,"mtime":1611600490568,"results":"62","hashOfConfig":"37"},{"size":6258,"mtime":1611883972693,"results":"63","hashOfConfig":"37"},{"size":2948,"mtime":1611882687469,"results":"64","hashOfConfig":"37"},{"size":5500,"mtime":1611859674411,"results":"65","hashOfConfig":"37"},{"size":3189,"mtime":1611879706326,"results":"66","hashOfConfig":"37"},{"size":1357,"mtime":1611912620970,"results":"67","hashOfConfig":"37"},{"size":6706,"mtime":1611878377807,"results":"68","hashOfConfig":"37"},{"size":13624,"mtime":1611912929175,"results":"69","hashOfConfig":"37"},{"size":2877,"mtime":1611914941754,"results":"70","hashOfConfig":"37"},{"size":6250,"mtime":1611880447217,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"3buf84",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\index.js",[],["149","150"],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\reportWebVitals.js",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\app\\index.js",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\index.js",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\Links.jsx",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\Logo.jsx",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\NavBar.jsx",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\index.js",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\MoviesInsert.jsx",[],["151","152"],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\MoviesList.jsx",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\MoviesUpdate.jsx",[],["153","154"],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\api\\index.js",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\JoinModal.jsx",["155"],"import React, { Component } from 'react';\r\nimport '../style/JoinModal.scss'\r\nimport '../style/Common.scss'\r\n\r\nimport { FaWindowClose } from 'react-icons/fa';\r\nimport api from '../api'\r\n\r\n\r\n\r\n\r\n\r\nclass JoinModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            adress: '',\r\n            city: '',\r\n            zip: '',\r\n            phone: 0,\r\n            store: '',\r\n            password: '',\r\n        }\r\n\r\n        this.onCloseModal = this.onCloseModal.bind(this);\r\n        this.onClickOutside = this.onClickOutside.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n\r\n    }\r\n\r\n    onCloseModal = () => {\r\n        this.props.onCloseModal()\r\n    }\r\n\r\n\r\n    onClickOutside = (event) => {\r\n        const specifiedElement = document.querySelector('.join-modal')\r\n        let isClickInside = specifiedElement.contains(event.target)\r\n        if (!isClickInside) {\r\n            this.onCloseModal()\r\n        };\r\n\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const value = event.target.value;\r\n        const field = event.target.name;\r\n        this.setState({\r\n            [field]: value\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n    handleSubmit = async () => {\r\n        // this.setState({ isLoading: true })\r\n\r\n        const { firstName, email, password } = this.state;\r\n\r\n        const payload = {\r\n            name: firstName,\r\n            email: email,\r\n            password: password,\r\n        }\r\n\r\n        await api.registerUser(payload).then((res) => {\r\n\r\n            console.log(res)\r\n            alert('User Created')\r\n            this.onCloseModal()\r\n\r\n        }, (err) => {\r\n            console.log(err)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    inputValidation = () => {\r\n        const { firstName, lastName } = this.state;\r\n\r\n        if (firstName.length < 1) {\r\n            alert('FYLL I NAMN!!')\r\n        }\r\n        if (lastName.length < 1) {\r\n            alert('FYLL I EFTERNAMN')\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"modal\" onClick={this.onClickOutside}>\r\n                    <div className=\"join-modal\">\r\n                        {/* <FaWindowClose className=\"close pointer\" onClick={this.onCloseModal} /> */}\r\n                        <div className='join-form'>\r\n                            <h1 className='join-title'>JOIN</h1>\r\n\r\n                            <input name=\"firstName\" type=\"text\" placeholder=\"First Name\" onChange={this.handleInputChange}></input>\r\n                            <input name=\"lastName\" type=\"text\" placeholder=\"Last Name\" onChange={this.handleInputChange}></input>\r\n                            <input name=\"email\" type=\"email\" placeholder=\"Email\" onChange={this.handleInputChange}></input>\r\n                            {/* <input name=\"phone\" type=\"text\" placeholder=\"Telefon\" onChange={this.handleInputChange}></input>\r\n                        <input name=\"adress\" type=\"text\" placeholder=\"Address\" onChange={this.handleInputChange}></input>\r\n                        <input name=\"city\" type=\"text\" placeholder=\"City\" onChange={this.handleInputChange}></input>\r\n                        <input name=\"zip\" type=\"text\" placeholder=\"Zip\" onChange={this.handleInputChange}></input>\r\n                        <input name=\"store\" type=\"text\" placeholder=\"Butik\" onChange={this.handleInputChange}></input> */}\r\n                            <input name=\"password\" type=\"password\" placeholder=\"Password\" onChange={this.handleInputChange}></input>\r\n\r\n                            <button className='join-button' type=\"submit\" onClick={this.handleSubmit}>Join</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JoinModal","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\LoginModal.jsx",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\Landing.jsx",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\context\\UserContext.jsx",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\functionalComp.jsx",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\FunctionalComp.jsx",[],["156","157"],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\utils\\storage.js",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\UserDashboard.jsx",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\UserDash\\Products.jsx",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\UserDash\\AddProduct.jsx",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\UserDash\\EditProduct.jsx",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\UserDash\\Store.jsx",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\utils\\FileUpload.js",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\LoadingAnimation.jsx",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\UserDash\\CreateStore.jsx",["158"],"import React, { Component } from 'react'\r\nimport api from '../../api'\r\nimport '../../style/pages/CreateStore.scss'\r\nimport '../../style/pages/PageLayout.scss'\r\nimport UserContext from '../../context/UserContext';\r\nimport FileUpload from '../../utils/FileUploadStore'\r\nimport '../../style/Common.scss'\r\n\r\nclass CreateStore extends Component {\r\n    static contextType = UserContext;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            userID: '',\r\n            name: '',\r\n            description: '',\r\n            logoImg: '',\r\n            email: '',\r\n            categories: [],\r\n            owner: '',\r\n            adress: {\r\n                street: '',\r\n                zip: '',\r\n                city: '',\r\n            },\r\n\r\n            isLoading: false,\r\n        }\r\n\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.handleAdressChange = this.handleAdressChange.bind(this)\r\n        this.updateImages = this.updateImages.bind(this)\r\n        this.redirect = this.redirect.bind(this)\r\n        this.displayCreateStore = this.displayCreateStore.bind(this)\r\n        this.connectStoreToUser = this.connectStoreToUser.bind(this)\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        // this.setState({\r\n        //      isLoading: true\r\n        //     })\r\n\r\n\r\n        await this.context.getUserData().then(() => {\r\n            this.setState({\r\n                // storeID: this.context.storeID,\r\n                userID: this.context.id,\r\n            })\r\n        })\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    handleInputChange = (event) => {\r\n        const value = event.target.value;\r\n        const field = event.target.name;\r\n\r\n        this.setState({\r\n            [field]: value\r\n        })\r\n\r\n    }\r\n\r\n    handleAdressChange = (event) => {\r\n\r\n        const value = event.target.value;\r\n        const field = event.target.name;\r\n        \r\n        const adress = {...this.state.adress}\r\n        adress[field] = value\r\n        this.setState({adress})\r\n\r\n    }\r\n\r\n\r\n    handleSubmit = async () => {\r\n\r\n        // event.preventDefault()\r\n\r\n        this.setState({\r\n            isLoading: true,\r\n        });\r\n\r\n        // Send new product data \r\n        //and state.store-id \r\n\r\n\r\n        \r\n        const { name, description, logoImg, categories, email, userID, adress } = this.state\r\n        \r\n        const payload = {\r\n            name: name,\r\n            description: description,\r\n            logoImg: logoImg,\r\n            categories: categories,\r\n            email: email,\r\n            owner: userID,\r\n            adress: adress,\r\n            storeID: '',\r\n        }\r\n\r\n// create Store\r\n// Then put StoreID to User\r\n        await api.createStore(payload).then((res) => {\r\n\r\n            // localStorage.setItem('storage-object', JSON.stringify({token: res.data}))\r\n\r\n            // Load something\r\n            const storeID = res.data.id\r\n            // alert('Store successfully created')\r\n            // console.log(this.state.images)\r\n\r\n             this.connectStoreToUser(userID, storeID)\r\n\r\n\r\n        }, (err) => {\r\n            console.log(err)\r\n        })\r\n\r\n    \r\n    }\r\n\r\n\r\n\r\n    connectStoreToUser = async (userID, storeID) => {\r\n\r\n\r\n\r\n        const payload = {\r\n            storeID: storeID \r\n        }\r\n\r\n\r\n        await api.updateUserStoreID(userID, payload).then((res) => {\r\n\r\n            // localStorage.setItem('storage-object', JSON.stringify({token: res.data}))\r\n\r\n            // Load something\r\n            console.log(res.data)\r\n\r\n            // alert('Store successfully connected to User')\r\n            this.props.history.push('/')\r\n\r\n\r\n        }, (err) => {\r\n            console.log(err)\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    redirect = () => {\r\n        this.props.history.push('/store')\r\n    }\r\n\r\n\r\n    updateImages = (newImages) => {\r\n\r\n        // console.log(newImages)\r\n        this.setState({\r\n            images: newImages\r\n        })\r\n    }\r\n\r\n\r\n\r\n    displayCreateStore = () => {\r\n\r\n        return (\r\n\r\n            <>\r\n\r\n            <div className='add-store-container'>\r\n\r\n                <h1 className='create-store-title'>CREATE STORE</h1>\r\n                {/* <h3>{this.state.userID}</h3> */}\r\n                <lottie-player src=\"https://assets3.lottiefiles.com/packages/lf20_1B1MZg.json\"  background=\"transparent\"  speed=\"1\"  style={{width: '500px', height: '500px'}}  loop  autoplay></lottie-player>\r\n                <div className=\"add-product-form\">\r\n\r\n                    {/* <FileUpload refreshFunction={this.updateImages} /> */}\r\n                    <input name=\"name\" className='common-input create-store-input' type=\"text\" placeholder=\"Store Name\" onChange={this.handleInputChange} />\r\n                    <textarea name=\"description\" className='common-input create-store-textinput' type=\"text\" placeholder=\"Description\" onChange={this.handleInputChange} />\r\n                    {/* <input name=\"categories\" type=\"text\" placeholder=\"Categories\" onChange={this.handleInputChange} /> */}\r\n                    <input name=\"email\" className='common-input create-store-input' type=\"email\" placeholder=\"Email\" onChange={this.handleInputChange} />\r\n                    <input name=\"street\" className='common-input create-store-input' type=\"text\" placeholder=\"Street\" onChange={this.handleAdressChange} />\r\n                    <input name=\"zip\" className='common-input create-store-input' type=\"text\" placeholder=\"Zip\" onChange={this.handleAdressChange} />\r\n                    <input name=\"city\" className='common-input create-store-input' type=\"text\" placeholder=\"City\" onChange={this.handleAdressChange} />\r\n\r\n                    <button type=\"submit\" className='common-button' onClick={this.handleSubmit}>CREATE STORE</button>\r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { storeID } = this.context\r\n\r\n\r\n\r\n\r\n        return (\r\n\r\n\r\n\r\n\r\n\r\n            <div className=\"page-layout\">\r\n                <div className=\"page-content\">\r\n\r\n                    {storeID ? this.redirect() : this.displayCreateStore()}\r\n\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateStore\r\n\r\n\r\n\r\n","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\utils\\FileUploadStore.js",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\Storefront.jsx",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\context\\CartContext.jsx",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\components\\CartNavBar.jsx",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\CustomerDash\\Cart.jsx",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\CustomerDash\\Checkout.jsx",["159"],"import React, { Component } from 'react'\r\nimport api from '../../api'\r\nimport '../../style/pages/Checkout.scss'\r\nimport '../../style/pages/PageLayout.scss'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport CartContext from '../../context/CartContext';\r\nimport LoadingAnimation from '../../components/LoadingAnimation';\r\n\r\nclass Checkout extends Component {\r\n    static contextType = CartContext;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            products: [],\r\n            store: '',\r\n            name: '',\r\n            email: '',\r\n            adress: [\r\n                { street: '', city: '', zip: 0 }\r\n            ],\r\n            phone: 0,\r\n            payment_method: null,\r\n\r\n            isLoading: false,\r\n            redirect: null\r\n        }\r\n\r\n        this.displayCheckout = this.displayCheckout.bind(this)\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.handleAdressChange = this.handleAdressChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.onClickNextBtn = this.onClickNextBtn.bind(this)\r\n\r\n\r\n\r\n\r\n        // this.showProduct = this.showProduct.bind(this)\r\n        // this.onDeleteProduct = this.onDeleteProduct.bind(this)\r\n        // this.loadProduct = this.loadProduct.bind(this)\r\n        // this.onUpdateProduct = this.onUpdateProduct.bind(this)\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n\r\n        this.setState({ isLoading: true })\r\n\r\n        await this.loadCartData().then(() => {\r\n\r\n            this.setState({\r\n                isLoading: false\r\n\r\n            })\r\n\r\n        })\r\n\r\n        // this.setState({store: name})\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //    componentDidMount = async () => {\r\n\r\n    //         const { name } = this.props.match.params\r\n\r\n    //         await this.loadStore(name).then( async () => {\r\n    //             this.loadStoreProducts(this.state.store._id)\r\n\r\n    //         })\r\n\r\n    //     }\r\n\r\n    //     loadStore = async (name) => {\r\n    //         this.setState({ isLoading: true })\r\n\r\n    //         await api.getStoreByName(name).then(store => {\r\n    //             this.setState({\r\n    //                 store: store.data.data,\r\n    //                 isLoading: false,\r\n    //             })\r\n\r\n    //             console.log('DATA', store.data)\r\n    //         }, (err) => {\r\n    //             this.setState({\r\n    //                 isLoading: false,\r\n    //                 redirect: true,\r\n    //             })\r\n    //             console.log(err)\r\n    //         })\r\n    //     }\r\n\r\n\r\n\r\n\r\n\r\n    handleInputChange = (event) => {\r\n        const value = event.target.value;\r\n        const field = event.target.name;\r\n        this.setState({\r\n            [field]: value\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n        // this.setState({...this.state.product, name: value});\r\n\r\n\r\n        // this.setState(prevState => {\r\n        //     let product = { ...prevState.product };  // creating copy of state variable jasper\r\n        //     product[field]  = value;                     // update the name property, assign a new value                 \r\n        //     return { product };                                 // return new object jasper object\r\n        //   })\r\n\r\n\r\n\r\n    }\r\n\r\n    handleAdressChange = (event) => {\r\n\r\n        const value = event.target.value;\r\n        const field = event.target.name;\r\n\r\n        const adress = { ...this.state.adress }\r\n        adress[field] = value\r\n        this.setState({ adress })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    handleSubmit = async () => {\r\n\r\n    \r\n\r\n\r\n        this.setState({\r\n            isLoading: true,\r\n        });\r\n\r\n\r\n        const { products, name, email, adress, phone} = this.state\r\n\r\n        const store = this.context.store\r\n\r\n        const total_price = this.context.calculateSum(products)\r\n\r\n        const destructuredProducts = products.map((fullProduct) => {\r\n            return (\r\n                { product: fullProduct.name, productID: fullProduct._id, price: fullProduct.price, quantity: fullProduct.cartQuantity }\r\n            )\r\n        })\r\n\r\n\r\n        const payload = {\r\n            products: destructuredProducts,\r\n            storeName: store.name,\r\n            name: name,\r\n            email: email,\r\n            adress: [\r\n                { street: adress.street, city: adress.city, zip: adress.zip }\r\n            ],\r\n            phone: phone,\r\n            payment_method: 'DHL',\r\n            total_price: total_price,\r\n            storeID: store._id\r\n        }\r\n\r\n\r\n\r\n        // create Store\r\n        // Then put StoreID to User\r\n        await api.createOrder(payload).then((res) => {\r\n\r\n\r\n            // const storeID = res.data.id\r\n            this.setState({\r\n                isLoading: false,\r\n                // rediret: 'ordercomplete'\r\n\r\n            })\r\n\r\n            alert('Order Created')\r\n\r\n            localStorage.removeItem('cart');\r\n\r\n            console.log('RES DATA:'.res)\r\n            this.props.history.push('/')\r\n\r\n\r\n\r\n        }, (err) => {\r\n            console.log(err)\r\n            this.setState({\r\n                isLoading: false,\r\n            })\r\n        })\r\n\r\n        this.setState({\r\n            isLoading: false,\r\n            // rediret: 'ordercomplete'\r\n        })\r\n    }\r\n\r\n\r\n\r\n    onClickNextBtn = (event) => {\r\n\r\n\r\n        const button = event.target.name\r\n\r\n    \r\n\r\n        const detailsContainer = document.querySelector('.customer-details-container')\r\n        const detailsTitle = document.querySelector('.details-title')\r\n\r\n        const shippingContainer = document.querySelector('.shipping-container')\r\n        \r\n        const shippingTitle = document.querySelector('.shipping-title')\r\n\r\n        const paymentContainer = document.querySelector('.payment-container')\r\n        const paymentTitle =  document.querySelector('.payment-title')\r\n\r\n        // const orderContainer = document.querySelector('.order-container')\r\n\r\n        if (button === 'details') {\r\n            detailsContainer.classList.add('hide')\r\n            detailsTitle.classList.add('hide')\r\n\r\n            shippingContainer.classList.remove('hide')\r\n            shippingTitle.classList.remove('hide')\r\n        }\r\n\r\n        if (button === 'shipping') {\r\n            shippingContainer.classList.add('hide')\r\n            shippingTitle.classList.add('hide')\r\n\r\n            paymentContainer.classList.remove('hide')\r\n            paymentTitle.classList.remove('hide')\r\n\r\n        }\r\n\r\n      \r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    displayCheckout = () => {\r\n\r\n        const store = this.context.store\r\n        const products = this.state.products\r\n\r\n\r\n        if (this.state.products) {\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <>\r\n\r\n\r\n                <div className='order-container hide'>\r\n\r\n                    <h2>Store: {store.name}</h2>\r\n\r\n\r\n                    <div>\r\n                        <h2>Cart:</h2>\r\n                        {this.state.products.map((product) => {\r\n                            return (\r\n                                <div className='order-item' key={product._id}>\r\n                                    <div className='order-item-image-container'>\r\n\r\n                                        <img alt='product' src={product.images[0]} style={{ height: '200px', width: '200px' }} />\r\n                                    </div>\r\n\r\n                                    <h2>Product name: {product.name}</h2>\r\n                                    <h2>Price styck: {product.price}</h2>\r\n                                    <h2>quantity: {product.cartQuantity}</h2>\r\n                                    <p>+</p>\r\n                                    <p>-</p>\r\n\r\n                                Total:{products ? this.context.calculateSum(products) : ''}\r\n\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='checkout-wrapper'>\r\n\r\n                    <h1 className='details-title'>ORDER DETAILS</h1>\r\n                    <div className='customer-details-container'>\r\n                        <div className='details-form'>\r\n\r\n                            <input name=\"name\" type=\"text\" placeholder=\"Name\" onChange={this.handleInputChange}></input>\r\n                            <input name=\"email\" type=\"email\" placeholder=\"Email\" onChange={this.handleInputChange}></input>\r\n                            <input name=\"phone\" type=\"number\" placeholder=\"Phone\" onChange={this.handleInputChange}></input>\r\n                            <input name=\"adress\" type=\"text\" placeholder=\"Adress\" onChange={this.handleAdressChange}></input>\r\n                            <input name=\"city\" type=\"text\" placeholder=\"City\" onChange={this.handleAdressChange}></input>\r\n                            <input name=\"zip\" type=\"number\" placeholder=\"Zip\" onChange={this.handleAdressChange}></input>\r\n                            <button name=\"details\" className=\"next-button common-button\" onClick={this.onClickNextBtn}>Next</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <h2 className='shipping-title hide'>Shipping</h2>\r\n                    <div className='shipping-container hide'>\r\n\r\n\r\n                        <div className='shipping-alternatives'>\r\n                            <form>\r\n                                <label>\r\n                                    <input type=\"radio\" name=\"radio\" />\r\n                                    <span className='shipping-alternative-title'>Schenker</span>\r\n                                    <p className='shipping-alternative-info'>69kr | 2-3 days delivery</p>\r\n                                </label>\r\n                                <label>\r\n                                    <input type=\"radio\" name=\"radio\" />\r\n                                    <span className='shipping-alternative-title'>Postnord</span>\r\n                                    <p className='shipping-alternative-info'>89kr | 2-14 days delivery</p>\r\n                                </label>\r\n                                <label>\r\n                                    <input type=\"radio\" name=\"radio\" />\r\n                                    <span className='shipping-alternative-title'>DHL</span>\r\n                                    <p className='shipping-alternative-info'>99kr | 1-4 days delivery</p>\r\n                                </label>\r\n                                <label>\r\n                                    <input type=\"radio\" name=\"radio\" />\r\n                                    <span className='shipping-alternative-title'>Instabox</span>\r\n                                    <p className='shipping-alternative-info'>129kr | Next day delivery</p>\r\n\r\n                                </label>\r\n                            </form>\r\n\r\n                        </div>\r\n\r\n                        <button name=\"shipping\" className=\"next-button common-button\" onClick={this.onClickNextBtn}>Next</button>\r\n\r\n                    </div>\r\n                    <div className='payment-container hide'>\r\n                        <h2 className='payment-title'>Payment</h2>\r\n\r\n                        <input className='credit-card-input' placeholder='Credit Card Number'></input>\r\n                         \r\n                        <button name='pay' className='pay-button common-button' onClick={this.handleSubmit}>PAY</button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    loadCartData = async () => {\r\n\r\n        this.setState({ isLoading: true })\r\n\r\n\r\n        const shoppingCart = this.context.shoppingCart\r\n\r\n\r\n        await shoppingCart.map(\r\n            (product) => {\r\n\r\n\r\n                return (\r\n\r\n                    api.getProductById(product.product).then((dbProduct) => {\r\n                        \r\n                        \r\n                        const loadedProduct = dbProduct.data.data\r\n                        \r\n                        loadedProduct.cartQuantity = product.quantity\r\n                        \r\n                        this.setState({\r\n                            products: [...this.state.products, loadedProduct],\r\n                            isLoading: false,\r\n                        })\r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                    }, (err) => {\r\n                        console.log(err)\r\n                        this.setState({\r\n                            isLoading: false,\r\n                        })\r\n                    })\r\n                    \r\n                    \r\n                    \r\n                    // return (\r\n                        //     <div key={index}>\r\n                        //       <h2>{product}</h2>\r\n                        //       <h2>{product.price}kr</h2>\r\n                        //       <img style={{height: '100px', width: '100px'}} src={image} />\r\n                        //     </div>\r\n                        // )\r\n                        \r\n                        )\r\n                    })\r\n                }\r\n                \r\n                \r\n                \r\n                \r\n                \r\n    render() {\r\n        const { isLoading, products } = this.state\r\n\r\n\r\n        if (this.state.redirect) {\r\n            return <Redirect to={this.state.redirect} />\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"page-layout\">\r\n                <div className=\"page-content\">\r\n\r\n\r\n                    {isLoading ? <LoadingAnimation /> : this.displayCheckout()}\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Checkout\r\n\r\n\r\n","C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\UserDash\\Orders.jsx",[],"C:\\Users\\vikto\\Documents\\Github\\fern\\client\\src\\pages\\CustomerDash\\OrderCompleted.jsx",[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"160","replacedBy":"164"},{"ruleId":"162","replacedBy":"165"},{"ruleId":"160","replacedBy":"166"},{"ruleId":"162","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":5,"column":10,"nodeType":"170","messageId":"171","endLine":5,"endColumn":23},{"ruleId":"160","replacedBy":"172"},{"ruleId":"162","replacedBy":"173"},{"ruleId":"168","severity":1,"message":"174","line":6,"column":8,"nodeType":"170","messageId":"171","endLine":6,"endColumn":18},{"ruleId":"168","severity":1,"message":"175","line":426,"column":28,"nodeType":"170","messageId":"171","endLine":426,"endColumn":36},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],["176"],["177"],["176"],["177"],"no-unused-vars","'FaWindowClose' is defined but never used.","Identifier","unusedVar",["176"],["177"],"'FileUpload' is defined but never used.","'products' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]